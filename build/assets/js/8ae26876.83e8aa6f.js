"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[762],{2236:e=>{e.exports=JSON.parse('{"functions":[{"name":"bitmask","desc":"Creates a bitmask serializer/deserializer.","params":[{"name":"bitCount","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"ByteWorksType<{boolean}>"}],"function_type":"static","source":{"line":82,"path":"src/moonwave.luau"}},{"name":"vector3","desc":"Creates a Vector3 serializer/deserializer.","params":[{"name":"serDesType","desc":"","lua_type":"ByteWorksType<number>"}],"returns":[{"desc":"","lua_type":"ByteWorksType<Vector3>"}],"function_type":"static","source":{"line":88,"path":"src/moonwave.luau"}},{"name":"bitfield","desc":"Creates a bitfield serializer/deserializer.","params":[{"name":"serDesType","desc":"","lua_type":"ByteWorksType<number>"},{"name":"bitCounts","desc":"","lua_type":"{number}"}],"returns":[{"desc":"","lua_type":"ByteWorksType<{number}>"}],"function_type":"static","source":{"line":103,"path":"src/moonwave.luau"}},{"name":"fixedSizeBuffer","desc":"Creates a fixed-size buffer serializer/deserializer.","params":[{"name":"size","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"ByteWorksType<buffer>"}],"function_type":"static","source":{"line":109,"path":"src/moonwave.luau"}},{"name":"opt","desc":"Wraps a serializer/deserializer to make it optional.","params":[{"name":"serDesType","desc":"","lua_type":"ByteWorksType<T>"}],"returns":[{"desc":"","lua_type":"ByteWorksType<T>"}],"function_type":"static","source":{"line":119,"path":"src/moonwave.luau"}},{"name":"tupleIOToTable","desc":"Converts a tuple-based serializer/deserializer to a table-based one.","params":[{"name":"serDesType","desc":"","lua_type":"ByteWorksType<...any>"}],"returns":[{"desc":"","lua_type":"ByteWorksType<any>"}],"function_type":"static","source":{"line":125,"path":"src/moonwave.luau"}},{"name":"tableIOToTuple","desc":"Converts a table-based serializer/deserializer to a tuple-based one.","params":[{"name":"serDesType","desc":"","lua_type":"ByteWorksType<any>"}],"returns":[{"desc":"","lua_type":"ByteWorksType<...any>"}],"function_type":"static","source":{"line":131,"path":"src/moonwave.luau"}},{"name":"tuple","desc":"Creates a tuple serializer/deserializer.","params":[{"name":"...","desc":"","lua_type":"ByteWorksType<any>"}],"returns":[{"desc":"","lua_type":"ByteWorksType<...any>"}],"function_type":"static","source":{"line":137,"path":"src/moonwave.luau"}},{"name":"literal","desc":"Creates a serializer/deserializer for a set of literal values.","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"ByteWorksType<any>"}],"function_type":"static","source":{"line":143,"path":"src/moonwave.luau"}},{"name":"enum","desc":"Creates a serializer/deserializer for an enum.","params":[{"name":"enum","desc":"","lua_type":"Enum"}],"returns":[{"desc":"","lua_type":"ByteWorksType<any>"}],"function_type":"static","source":{"line":149,"path":"src/moonwave.luau"}},{"name":"array","desc":"Creates a serializer/deserializer for an array.","params":[{"name":"serDesType","desc":"","lua_type":"ByteWorksType<T>"}],"returns":[{"desc":"","lua_type":"ByteWorksType<{T}>"}],"function_type":"static","source":{"line":155,"path":"src/moonwave.luau"}},{"name":"fixedSizeArray","desc":"Creates a serializer/deserializer for a fixed-size array.","params":[{"name":"serDesType","desc":"","lua_type":"ByteWorksType<T>"},{"name":"fixedSize","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"ByteWorksType<{T}>"}],"function_type":"static","source":{"line":162,"path":"src/moonwave.luau"}},{"name":"struct","desc":"Creates a serializer/deserializer for a struct.","params":[{"name":"fields","desc":"","lua_type":"{[string]: ByteWorksType<any>}"}],"returns":[{"desc":"","lua_type":"ByteWorksType<{[string]: any}>"}],"function_type":"static","source":{"line":168,"path":"src/moonwave.luau"}},{"name":"optStruct","desc":"Creates a serializer/deserializer for an optional struct.","params":[{"name":"fields","desc":"","lua_type":"{[string]: ByteWorksType<any>}"}],"returns":[{"desc":"","lua_type":"ByteWorksType<{[string]: any}>"}],"function_type":"static","source":{"line":174,"path":"src/moonwave.luau"}},{"name":"map","desc":"Creates a serializer/deserializer for a map.","params":[{"name":"keyType","desc":"","lua_type":"ByteWorksType<K>"},{"name":"valueType","desc":"","lua_type":"ByteWorksType<V>"}],"returns":[{"desc":"","lua_type":"ByteWorksType<{[K]: V}>"}],"function_type":"static","source":{"line":181,"path":"src/moonwave.luau"}},{"name":"createBufferFromType","desc":"Creates a buffer from a serializer/deserializer and values.","params":[{"name":"serDesType","desc":"","lua_type":"ByteWorksType<T>"},{"name":"...","desc":"","lua_type":"T"}],"returns":[{"desc":"","lua_type":"buffer"}],"function_type":"static","source":{"line":192,"path":"src/moonwave.luau"}},{"name":"resultExcludingCursor","desc":"Deserializes a value, excluding the cursor.","params":[{"name":"serDesType","desc":"","lua_type":"ByteWorksType<T>"},{"name":"buff","desc":"","lua_type":"buffer"},{"name":"offset","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"...T"}],"function_type":"static","source":{"line":200,"path":"src/moonwave.luau"}},{"name":"createAndSerialize","desc":"Creates a buffer and serializes values into it.","params":[{"name":"serDesType","desc":"","lua_type":"ByteWorksType<T>"},{"name":"...","desc":"","lua_type":"T"}],"returns":[{"desc":"","lua_type":"buffer"}],"function_type":"static","source":{"line":207,"path":"src/moonwave.luau"}}],"properties":[{"name":"u8","desc":"Serializes and deserializes an 8-bit unsigned integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":16,"path":"src/moonwave.luau"}},{"name":"u16","desc":"Serializes and deserializes a 16-bit unsigned integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":20,"path":"src/moonwave.luau"}},{"name":"u24","desc":"Serializes and deserializes a 24-bit unsigned integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":24,"path":"src/moonwave.luau"}},{"name":"u32","desc":"Serializes and deserializes a 32-bit unsigned integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":28,"path":"src/moonwave.luau"}},{"name":"u53","desc":"Serializes and deserializes a 53-bit unsigned integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":32,"path":"src/moonwave.luau"}},{"name":"i8","desc":"Serializes and deserializes an 8-bit signed integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":36,"path":"src/moonwave.luau"}},{"name":"i16","desc":"Serializes and deserializes a 16-bit signed integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":40,"path":"src/moonwave.luau"}},{"name":"i24","desc":"Serializes and deserializes a 24-bit signed integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":44,"path":"src/moonwave.luau"}},{"name":"i32","desc":"Serializes and deserializes a 32-bit signed integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":48,"path":"src/moonwave.luau"}},{"name":"i53","desc":"Serializes and deserializes a 53-bit signed integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":52,"path":"src/moonwave.luau"}},{"name":"f16","desc":"Serializes and deserializes a 16-bit floating-point number.\\r","lua_type":"ByteWorksType<number>","source":{"line":56,"path":"src/moonwave.luau"}},{"name":"f32","desc":"Serializes and deserializes a 32-bit floating-point number.\\r","lua_type":"ByteWorksType<number>","source":{"line":60,"path":"src/moonwave.luau"}},{"name":"f64","desc":"Serializes and deserializes a 64-bit floating-point number.\\r","lua_type":"ByteWorksType<number>","source":{"line":64,"path":"src/moonwave.luau"}},{"name":"vlq","desc":"Serializes and deserializes a variable-length unsigned integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":68,"path":"src/moonwave.luau"}},{"name":"svlq","desc":"Serializes and deserializes a variable-length signed integer.\\r","lua_type":"ByteWorksType<number>","source":{"line":72,"path":"src/moonwave.luau"}},{"name":"string","desc":"Serializes and deserializes a string.\\r","lua_type":"ByteWorksType<string>","source":{"line":76,"path":"src/moonwave.luau"}},{"name":"color3","desc":"Serializes and deserializes a Color3.\\r","lua_type":"ByteWorksType<Color3>","source":{"line":92,"path":"src/moonwave.luau"}},{"name":"cframe","desc":"Serializes and deserializes a CFrame.\\r","lua_type":"ByteWorksType<CFrame>","source":{"line":96,"path":"src/moonwave.luau"}},{"name":"buffer","desc":"Serializes and deserializes a buffer.\\r","lua_type":"ByteWorksType<buffer>","source":{"line":113,"path":"src/moonwave.luau"}},{"name":"boolean","desc":"Serializes and deserializes a boolean.\\r","lua_type":"ByteWorksType<...boolean>","source":{"line":185,"path":"src/moonwave.luau"}}],"types":[{"name":"ByteWorksType","desc":"A type representing a serialization/deserialization utility for a specific data type.","fields":[{"name":".ser","lua_type":"(buff: buffer, offset: number, T...) -> number","desc":""},{"name":".des","lua_type":"(buff: buffer, offset: number) -> (number, T...)","desc":""},{"name":".size","lua_type":"(T...) -> number","desc":""},{"name":".optionalFlag","lua_type":"boolean?","desc":""}],"source":{"line":12,"path":"src/moonwave.luau"}}],"name":"ByteWorks","desc":"ByteWorks is a library for serializing and deserializing binary data in Roblox.\\nIt provides utilities for working with buffers, integers, floating-point numbers, strings, and more.\\r","source":{"line":4,"path":"src/moonwave.luau"}}')}}]);